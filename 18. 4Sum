
class Solution:
    def fourSum(self, nums: List[int], target: int) -> List[List[int]]:
        self.results = []
        nums.sort()
        self.findNum(nums, target, 4, [])
        return self.results
    
    
    def findNum(self,nums,target,N,result):
        if len(nums)<N or N<2:
            return
        
        if N == 2:
            l, r = 0, len(nums)-1
            while l<r:
                sumx=nums[l]+nums[r]
                if sumx==target:
                    self.results.append(result+[nums[l],nums[r]])
                    
                    l+=1
                    r-=1
                    while l<r and nums[l]==nums[l-1]:
                        l+=1
                        
                    while l<r and nums[r]==nums[r+1]:
                        r-=1
                        
                elif sumx>target:
                    r-=1
                else:
                    l+=1
        else:
            for i in range(len(nums)-N+1):
                if nums[i]*N>target or nums[-1]*N<target:
                    break
                if i == 0 or (i>0 and nums[i-1]!=nums[i]):
                    self.findNum(nums[i+1:], target-nums[i],N-1,result+[nums[i]])
