class Solution:
    #https://leetcode-cn.com/problems/house-robber-ii/solution/213-da-jia-jie-she-iidong-tai-gui-hua-xi-798l/
    #https://blog.csdn.net/fuxuemingzhu/article/details/82982325
    def rob(self, nums: List[int]) -> int:
        
        if not nums:
            return 0
        
        if len(nums) == 1:
            return nums[0]
        
        if len(nums) == 2:
            return max(nums[0], nums[1])
        
        N = len(nums)
        
        return max(self.robb(nums[0:N-1]), self.robb(nums[1:N]))
    
    
    def robb(self, nums):
        if not nums:
            return 0
        
        if len(nums) == 1:
            return nums[0]
        
        if len(nums) == 2:
            return max(nums[0], nums[1])
        
        N = len(nums)
        dp = [0]*N
        dp[0] = nums[0]
        
        dp[1] = max(nums[0], nums[1])
        
        for i in range(2, N):
            dp[i] = max(dp[i-1], dp[i-2]+nums[i])
            
            
        return dp[N-1]
