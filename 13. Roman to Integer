class Solution:
    def romanToInt(self, s: str) -> int:
        d = {'I': 1, 'IV': 4, 'V': 5, 'IX': 9, 'X': 10, 'XL': 40, 'L': 50, 'XC': 90,  'C': 100, 'CD': 400, 'D': 500, 'CM': 900, 'M': 1000}
        result = 0
        i = 0
        while i < len(s):
            #查看当前位和下一位的字符
            str1 = s[i:i+2]  
            #如果当前位置是特殊情况，那么返回其在字典中对应值，并且下一次从特殊字符之后一位开始索引
            if str1 in d: 
                result += d.get(str1) 
                i += 2
            #如果当前位不是特殊情况，那么只返回当前位的数值
            else:
                result += d[s[i]] 
                i += 1
        return result
 
 
 class Solution:
    def romanToInt(self, s: str) -> int:
        
        values = {
            "I": 1,
            "V": 5,
            "X": 10,
            "L": 50,
            "C": 100,
            "D": 500,
            "M": 1000,  
                      
        }
        
        total = 0
        i = 0
        while i < len(s):
            
            if i + 1 < len(s) and values[s[i]] < values[s[i+1]]:
                total += values[s[i+1]] - values[s[i]]
                
                i+=2
            
            
            
            else:
                total += values[s[i]]
                i += 1
                
        return total
