class Solution:
    def minWindow(self, s: str, t: str) -> str:
        minlen = float('inf')
        left = 0
        right = 0
        
        #result substring
        res = ''
        #this is the times that string showed in the window
        #need is used for recording the T
        window = dict()
        need = dict()
        
        #for loop
        for i in t:
            need[i] = need.get(i,0)+1
            
        match = 0
        
        while right < len(s):
            c1=s[right]
            if c1 in need:
                window[c1] = window.get(c1,0) + 1
                if window[c1] == need[c1]:
                    match+=1
            right+=1
            
            while match == len(need):
                if right-left<minlen:
                    start = left
                    minlen = right - left
                c2 = s[left]
                
                if c2 in need:
                    if window[c2] == need[c2]:
                        match-=1
                    window[c2]-=1
                left+=1
                
        return '' if minlen==float('inf') else s[start:minlen+start]
